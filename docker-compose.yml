services:
  sirius-mock:
#    image: stoplight/prism:5
    image: outofcoffee/imposter-all
#    command: mock -h 0.0.0.0 -p 4010 -d /tmp/openapi.yml
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "imposter", "list", "-x" ]
      interval: 15s
      timeout: 10s
      retries: 3
    ports:
      -  8335:8080
    volumes:
#      - "./docker/sirius/openapi.yml:/tmp/openapi.yml"
      - ./docker/sirius:/opt/imposter/config

#  yoti-mock:
#    image: paper-identity/yoti-mock
#    build:
#      context: docker/yoti
#      dockerfile: Dockerfile
#    restart: unless-stopped
#    healthcheck:
#      test: [ "CMD", "imposter", "list", "-x" ]
#      interval: 15s
#      timeout: 10s
#      retries: 3
#    volumes:
#      - ./docker/yoti:/opt/imposter/config
#    ports:
#      - 8334:8080

  api:
    image: paper-identity/api
    build:
      context: service-api
      dockerfile: Dockerfile
      target: production
    depends_on:
      localstack:
        condition: service_healthy
    env_file: ./service-api/docker-compose.env
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
    volumes:
      - ./service-api:/var/www
      - ./service-api/config/development.config.php.dist:/var/www/config/development.config.php

  api-test:
    image: paper-identity/api-test
    build:
      context: service-api
      dockerfile: Dockerfile
      target: development
    depends_on:
      localstack:
        condition: service_healthy
#      yoti-mock:
#        condition: service_healthy
    env_file: ./service-api/docker-compose.env
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./service-api/build:/var/www/build
      - ./service-api/config:/var/www/config
      - ./service-api/module:/var/www/module
      - ./service-api/phpcs.xml:/var/www/phpcs.xml
      - ./service-api/phpunit.xml:/var/www/phpunit.xml
      - ./service-api/psalm.xml:/var/www/psalm.xml

  front:
    image: paper-identity/front
    build:
      context: service-front
      dockerfile: Dockerfile
    depends_on:
      api-web:
        condition: service_healthy
      sirius-mock:
        condition: service_healthy
    environment:
      - API_BASE_URI=http://api-web
      - SIRIUS_BASE_URL=http://sirius-mock:4010 # http://host.docker.internal:8080 for real Sirius
      - SIRIUS_PUBLIC_URL=http://localhost:8080
      - APP_DEBUG=1
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./service-front:/var/www
      - ./service-front/config/development.config.php.dist:/var/www/config/development.config.php
      - static-content:/var/www/public

  front-test:
    image: paper-identity/front-test
    build:
      context: service-front
      dockerfile: Dockerfile
      target: development
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - ./service-front/build:/var/www/build
      - ./service-front/config:/var/www/config
      - ./service-front/module:/var/www/module
      - ./service-front/phpcs.xml:/var/www/phpcs.xml
      - ./service-front/phpunit.xml:/var/www/phpunit.xml
      - ./service-front/psalm.xml:/var/www/psalm.xml

  api-web:
    build: nginx
    depends_on:
      api:
        condition: service_healthy
#      yoti-mock:
#        condition: service_healthy
    environment:
      APP_HOST: api
      APP_NAME: api
      APP_PORT: 9000
      NGINX_LOG_LEVEL: info
    ports:
      - 8001:80
    healthcheck:
      test: curl -f http://localhost/nginx-health || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  front-web:
    build: nginx
    depends_on:
      front:
        condition: service_healthy
    environment:
      APP_HOST: front
      APP_NAME: front
      APP_PORT: 9000
      NGINX_LOG_LEVEL: info
    ports:
      - 8080:80
    healthcheck:
      test: curl -f http://localhost/nginx-health || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - static-content:/var/www/public

  api-composer:
    image: composer
    command: [ "install", "--ignore-platform-reqs" ]
    volumes:
      - ~/.composer:/tmp
      - ./service-api:/app

  front-composer:
    image: composer
    command: [ "install", "--ignore-platform-reqs" ]
    volumes:
      - ~/.composer:/tmp
      - ./service-front:/app

  localstack:
    image: localstack/localstack:3.4
    volumes:
      - "./scripts/localstack/init/private_key.pem:/tmp/private_key.pem"
      - "./scripts/localstack/init/public_key.pem:/tmp/public_key.pem"
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"

    environment:
      AWS_DEFAULT_REGION: eu-west-1
    healthcheck:
      test: bash /scripts/wait/healthcheck.sh
      interval: 20s
      timeout: 30s
      retries: 50
    restart: unless-stopped

volumes:
  static-content:
