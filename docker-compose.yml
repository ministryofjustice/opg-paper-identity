services:
  sirius-mock:
    image: stoplight/prism:5.8.2
    command: mock -h 0.0.0.0 -p 4010 -d /tmp/openapi.yml
    restart: unless-stopped
    healthcheck:
      test: wget -O /dev/null -S 'http://0.0.0.0:4010/api/v1/users/current' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
    volumes:
      - "./docker/sirius/openapi.yml:/tmp/openapi.yml"

  yoti-mock:
    image: paper-identity/yoti-mock
    build:
      context: docker/yoti
      dockerfile: Dockerfile
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "imposter", "list", "-x" ]
      interval: 15s
      timeout: 10s
      retries: 3
    volumes:
      - ./docker/yoti:/opt/imposter/config

  api:
    image: paper-identity/api
    build:
      context: service-api
      dockerfile: Dockerfile
      target: production
    depends_on:
      localstack:
        condition: service_healthy
    env_file: ./service-api/docker-compose.env
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3

  api-test:
    image: paper-identity/api-test
    build:
      context: service-api
      dockerfile: Dockerfile
      target: development
    depends_on:
      localstack:
        condition: service_healthy
      yoti-mock:
        condition: service_healthy
    env_file: ./service-api/docker-compose.env
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  front:
    image: paper-identity/front
    build:
      context: service-front
      dockerfile: Dockerfile
    depends_on:
      api-web:
        condition: service_healthy
      sirius-mock:
        condition: service_healthy
    env_file: ./service-front/docker-compose.env
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - static-content:/var/www/public

  front-test:
    image: paper-identity/front-test
    build:
      context: service-front
      dockerfile: Dockerfile
      target: development
    depends_on:
      pact-mock:
        condition: service_healthy
    healthcheck:
      test: SCRIPT_NAME=/ping SCRIPT_FILENAME=/ping REQUEST_METHOD=GET cgi-fcgi -bind -connect 127.0.0.1:9000
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  api-web:
    build: nginx
    depends_on:
      api:
        condition: service_healthy
      yoti-mock:
        condition: service_healthy
    environment:
      APP_HOST: api
      APP_NAME: api
      APP_PORT: 9000
      NGINX_LOG_LEVEL: info
    healthcheck:
      test: curl -f http://localhost/nginx-health || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  front-web:
    build: nginx
    depends_on:
      front:
        condition: service_healthy
    environment:
      APP_HOST: front
      APP_NAME: front
      APP_PORT: 9000
      NGINX_LOG_LEVEL: info
    ports:
      - 8080:80
    healthcheck:
      test: curl -f http://localhost/nginx-health || exit 1
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s
    volumes:
      - static-content:/var/www/public

  localstack:
    image: localstack/localstack:3.6
    volumes:
      - "./scripts/localstack/init:/etc/localstack/init/ready.d"
      - "./scripts/localstack/wait:/scripts/wait"
    environment:
      AWS_DEFAULT_REGION: eu-west-1
    healthcheck:
      test: bash /scripts/wait/healthcheck.sh
      interval: 20s
      timeout: 30s
      retries: 50
    restart: unless-stopped

  pact-mock:
    image: pactfoundation/pact-cli:latest
    command:
      - mock-service
      - -p
      - "80"
      - --host
      - "0.0.0.0"
      - --pact-dir
      - /tmp/pacts
      - --consumer
      - paper-identity
      - --provider
      - ${PACT_PROVIDER_NAME:-sirius}
    volumes:
      - "./build/output/pacts:/tmp/pacts"
    healthcheck:
      test: "wget -O /dev/null -S 'http://0.0.0.0/' --header='X-Pact-Mock-Service: true' 2>&1 | grep 'HTTP/1.1 200 OK' || exit 1"
      interval: 15s
      timeout: 10s
      retries: 3
      start_period: 30s

  cypress:
    build:
      dockerfile: docker/cypress/Dockerfile
    command: [ "--headless", "-b", "electron" ]
    volumes:
      - ./e2e-tests/cypress/screenshots:/root/cypress/screenshots:rw,delegated
    depends_on:
      front-web:
        condition: service_healthy

volumes:
  static-content:
