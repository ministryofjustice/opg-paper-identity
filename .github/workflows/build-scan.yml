name: "[Job] Docker Build and Scan"

on:
  workflow_call:
    inputs:
      checkout_tag:
        description: "Ref or tag to checkout"
        default: ${{ github.ref }}
        required: false
        type: string

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: write
  security-events: write
  pull-requests: read

env:
  COMPOSE_FILE: docker-compose.yml

jobs:
  docker_build_scan:
    strategy:
      fail-fast: true
      matrix:
        include:
          - ecr_repository: paper-identity/api
            service_name: api
          - ecr_repository: paper-identity/front
            service_name: front
          - ecr_repository: paper-identity/api-test
            service_name: api-test
          - ecr_repository: paper-identity/front-test
            service_name: front-test
          - ecr_repository: paper-identity/yoti-mock
            service_name: yoti-mock
    runs-on: ubuntu-latest
    name: Build ${{ matrix.service_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_tag }}
      - name: Build ${{ matrix.ecr_repository }} Image
        id: build_image
        run: |
          docker compose build ${{ matrix.service_name }}
      - name: Configure AWS Credentials With Assumed Role to Management
        uses: aws-actions/configure-aws-credentials@v4.0.2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/paper-identity-ci
          role-duration-seconds: 900
          role-session-name: OPGPaperIdentityGithubAction
      - name: ECR Login
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v2.0.1
        with:
          registries: 311462405659
      - name: Trivy Image Vulnerability Scanner for ${{ matrix.service_name }}
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.24.0
        env:
          TRIVY_DB_REPOSITORY: ${{ steps.login_ecr.outputs.registry }}/trivy-db-public-ecr/aquasecurity/trivy-db:2
        with:
          image-ref: ${{ matrix.ecr_repository }}:latest
          severity: "HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-results-${{ matrix.service_name }}.sarif"
          vuln-type: 'os,library'
      - name: Upload Trivy scan results to GitHub Security tab for  ${{ matrix.service_name }}
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@v3
        if: ${{ matrix.service_name != 'yoti-mock' && !cancelled() }}
        with:
          sarif_file: "trivy-results-${{ matrix.service_name }}.sarif"
      - name: Save image
        run: |
          mkdir -p /tmp/images
          docker save -o /tmp/images/${{ matrix.service_name }}.tar ${{ matrix.ecr_repository }}:latest
      - name: Archive image
        uses: actions/upload-artifact@v4
        with:
          name: image-${{ matrix.service_name }}
          path: |
            /tmp/images/${{ matrix.service_name }}.tar
