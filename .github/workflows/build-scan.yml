name: "[Job] Docker Build and Scan"

on:
  workflow_call:
    inputs:
      checkout_tag:
        description: "Ref or tag to checkout"
        default: ${{ github.ref }}
        required: false
        type: string

defaults:
  run:
    shell: bash

permissions:
  id-token: write
  contents: write
  security-events: write
  pull-requests: read

jobs:
  docker_build_scan:
    strategy:
      fail-fast: true
      matrix:
        include:
          - ecr_repository: paper-identity/api
            service_name: api
          - ecr_repository: paper-identity/front
            service_name: front
          - ecr_repository: paper-identity/api-test
            service_name: api-test
          - ecr_repository: paper-identity/front-test
            service_name: front-test
          - ecr_repository: paper-identity/yoti-mock
            service_name: yoti-mock
    runs-on: ubuntu-latest
    name: Build ${{ matrix.service_name }}
    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.checkout_tag }}
      - name: Build ${{ matrix.ecr_repository }} Image
        id: build_image
        run: |
          docker compose build ${{ matrix.service_name }}
      - name: Trivy Image Vulnerability Scanner for ${{ matrix.service_name }}
        id: trivy_scan
        uses: aquasecurity/trivy-action@0.21.0
        with:
          image-ref: ${{ matrix.ecr_repository }}:latest
          severity: "HIGH,CRITICAL"
          format: "sarif"
          output: "trivy-results-${{ matrix.service_name }}.sarif"
      - name: Upload Trivy scan results to GitHub Security tab for  ${{ matrix.service_name }}
        id: trivy_upload_sarif
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: "trivy-results-${{ matrix.service_name }}.sarif"
      - name: Save image
        run: |
          mkdir -p /tmp/images
          docker save -o /tmp/images/${{ matrix.service_name }}.tar ${{ matrix.ecr_repository }}:latest
      - name: Archive image
        uses: actions/upload-artifact@v4
        with:
          name: image-${{ matrix.service_name }}
          path: |
            /tmp/images/${{ matrix.service_name }}.tar
