name: "Main Workflow"

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  actions: read
  checks: write
  contents: write
  id-token: write
  pull-requests: write
  security-events: write


jobs:
  # generate a branch name
  branch_name:
    name: "Generate a safe branch name"
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-branch-name.yml@v1.36.0

  # generate workspace name
  workspace_name:
    name: "Generate the workspace name"
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-workspace.yml@v1.36.0

  # generate tag
  semver_tag:
    needs: [branch_name]
    name: "Generate the semver tag value"
    uses: ministryofjustice/opg-github-workflows/.github/workflows/data-parse-semver-tag.yml@v1.36.0
    with:
      branch_name: ${{ needs.branch_name.outputs.parsed }}
    secrets: inherit

  build:
    name: Build and Scan
    uses: ./.github/workflows/build-scan.yml

  test:
    name: Test
    needs: [build]
    uses: ./.github/workflows/test.yml

  push:
    name: "ECR push"
    runs-on: ubuntu-latest
    needs: [test, workspace_name, semver_tag]
    steps:
      - uses: actions/checkout@v3
      - uses: unfor19/install-aws-cli-action@v1
      - name: Configure AWS Credentials With Assumed Role to Management
        uses: aws-actions/configure-aws-credentials@v3.0.1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-1
          role-to-assume: arn:aws:iam::311462405659:role/paper-identity-ci
          role-duration-seconds: 900
          role-session-name: OPGPaperIdentityGithubAction
      - name: ECR Login
        id: login_ecr
        uses: aws-actions/amazon-ecr-login@v1.7.0
        with:
          registries: 311462405659
      - name: Push Container
        env:
          SEMVER_TAG: ${{ needs.semver_tag.outputs.tag }}
          ECR_REGISTRY: ${{ steps.login_ecr.outputs.registry }}
          ECR_REPOSITORY: ${{ matrix.data.image_app_name }}
        run: |
          docker tag ${{ env.local_docker_image }} $ECR_REGISTRY/$ECR_REPOSITORY:${{ env.SEMVER_TAG }}
          if ${{ github.event_name == 'push' }}; then
            docker tag ${{ env.local_docker_image }} $ECR_REGISTRY/$ECR_REPOSITORY:latest
            docker tag ${{ env.local_docker_image }} $ECR_REGISTRY/$ECR_REPOSITORY:main-${{ env.SEMVER_TAG }}
          fi
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY

  end:
    name: 'End of workflow'
    runs-on: 'ubuntu-latest'
    needs: [branch_name, workspace_name, semver_tag, test, push]
    steps:
      - name: "End"
        run: |
          echo "Done"
